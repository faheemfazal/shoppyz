<%- include('userpartials/userheader.ejs') %>
    <section class="banner-area organic-breadcrumb">
        <div class="container">
            <div class="breadcrumb-banner d-flex flex-wrap align-items-center justify-content-end">
                <div class="col-first">
                    <h1>Checkout</h1>
                    <nav class="d-flex align-items-center">
                        <a href="index.html">Home<span class="lnr lnr-arrow-right"></span></a>
                        <a href="single-product.html">Checkout</a>
                    </nav>
                </div>
            </div>
        </div>
    </section>
    <!-- End Banner Area -->

    <!--================Checkout Area =================-->
    <section class="checkout_area section_gap">
        <div class="container">
            <div class="returning_customer">

            </div>

            <div class="billing_details">
                <form method="post" id="checkout-form" novalidate="novalidate">
                    <div class="row">
                        <div class="col-lg-8">

                            <div class="check_title">
                                <div>
                                    <h1>
                                        BILLING DETAILES
                                    </h1>
                                    <P>
                                        SELECT YOURE ADDRESS
                                    </P>
                                </div>
                            </div>
                            <% for( let i=0; i < address.Address.length; i++ ) { %>

                                <input name="address" id="<%= address.Address[i]._id %>" class="radio" type="radio"
                                    value="<%= address.Address[i]._id %>">

                                <p>
                                    <a style="        width: 88vh;
                                height: 7vh;    background: #f16a00;;text-align: left;border: 0;"
                                        class="btn btn-primary" data-bs-toggle="collapse" href="#multiCollapseExample1"
                                        role="button" aria-expanded="false" aria-controls="multiCollapseExample1">
                                        <%= address.Address[i].Fullname %>
                                    </a>

                                </p>
                                <div class="row">
                                    <div class="col">
                                        <div class="collapse multi-collapse" id="multiCollapseExample1">
                                            <div class="card card-body">
                                                <h4>
                                                    <%= address.Address[i].Fullname %>
                                                </h4>
                                                <p>
                                                    <%= address.Address[i].number %>
                                                </p>

                                                <p>
                                                    <%= address.Address[i].pinCode %>,<%= address.Address[i].State %>
                                                </p>

                                                <p>
                                                    <%= address.Address[i].houseaddress %>,<%=
                                                            address.Address[i].roadaddress %>
                                                </p>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- <div class="col">
                                    <div class="collapse multi-collapse" id="multiCollapseExample2">
                                        <div class="card card-body">
                                            Some placeholder content for the second collapse component of this
                                            multi-collapse example. This panel is hidden by default but revealed when
                                            the user activates the relevant trigger.
                                        </div>
                                    </div>
                                </div> -->
                                </div>

                                <% } %>
                                    <div class="col-md-6 form-group ">
                                        <span class="placeholder" data-placeholder="">Email</span>
                                        <input type="email" class="form-control" id="name" name="email"
                                            value="<%= user.Email %> ">

                                    </div>
                                    <div class="col-md-6 form-group ">

                                        <span class="placeholder" data-placeholder="">Number</span>
                                        <input type="number" class="form-control" id="name" name="number"
                                            value="<%= user.Number %> ">

                                    </div>
                                    <div class="col-md-6 form-group ">
                                        <span class="placeholder" data-placeholder="">Full name</span>
                                        <input type="email" class="form-control" id="name" name="name"
                                            value="<%= user.FirstName %> ">

                                    </div>
                                    <div class="form-group">
                                        <div class="radio">
                                            <label><input type="radio" name="optradio"> Create an Account? </label>
                                            <label><input type="radio" name="optradio"> Ship to different
                                                address</label>
                                        </div>
                                    </div>
                                    <a href="/profile" class="genric-btn info" style="margin-top: 20px; ">Add
                                        Address</a>
                                    <div class="cupon_area pt-5">
                                        <div class="check_title">
                                            <h2
                                                style="   height: 7vh;    background: #f16a00;text-align: left; color: white;">
                                                Have a coupon? <a href="#">Click here to enter your code</a></h2>
                                        </div>
                                        <input type="text" placeholder="Enter coupon code" id="coupenInput"
                                            name="coupencode">
                                        <p id="coupenErr"></p>

                                        <input type="button" onclick="applayCoupen('<%= total+50 %>')"
                                            style="display: block;  width: 183px;" id="AppleyButton"
                                            value="applay coupen" class=" tp_btn btn-primery">
                                        <!-- <button class="tp_btn" style=" background: #ffba00;color: #fff;border-color: #ffba00;" >Apply Coupon</button> -->
                                    </div>
                        </div>

                        <div class="col-lg-4">
                            <div class="order_box">
                                <h2>Your Order</h2>
                                <ul class="list">
                                    <li><a href="#">Product <span>Total</span></a></li>
                                    <% for( let i=0; i < product.length; i++ ) { %>

                                        <li><a href="#">
                                                <%= product[i].ProductDetails.ProductName %> <span class="middle">x 0<%=
                                                            product[i].quantity %></span> <span class="last">$<%=
                                                            product[i].total %></span>
                                            </a></li>

                                        <% } %>

                                </ul>
                                <ul class="list list_2">
                                    <input type="text" value="<%= total %>" name="grandTotal" hidden>
                                    <li><a href="#">Subtotal <span>$<%= total %> .00</span></a></li>

                                    <li><a href="#">Discount amount <span id="discountAmount"></span></a></li>
                                    <li><a href="#">Shipping Charge<span id="discountAmount">50</span></a></li>
                                    <li><a href="#">Total <span id="totalAmount">$<%= total+50 %>.00</span></a></li>
                                    <input type="number" id="totalAmount" value="50" hidden>
                                    <input type="text" id="totalAmount" value="<%= total+50 %>" name="total" hidden>
                                </ul>
                                <div class="payment_item active">
                                    <div class="radio">
                                        <input type="radio" id="paypal" value="paypal" name="paymentMethod">
                                        <label style="margin-top: 20px">paypal </label>
                                        <img src="/userstyle/img/product/card.jpg" alt="">

                                    </div>
                                    <!-- <p>Pay via PayPal; you can pay with your credit card if you donâ€™t have a PayPal
                                        account.</p> id="wallet"  value="Wallet" name="paymentMethod-->

                                    <div class="radio">
                                        <input type="radio" id="wallet" value="Wallet" name="paymentMethod">
                                        <label style="margin-top: 20px">wallet </label>
                                        <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSR78yTRfn12X8NBuiH4xqwPYtX9jYQEbArFg&usqp=CAU"
                                            style="    width: 30px;" alt="">
                                        <input type="text" name="cartId" value="<%= cartProduct._id %> " hidden>
                                    </div>
                                    <!-- <p>Pay via PayPal; you can pay with your credit card if you donâ€™t have a PayPal
                                        account.</p> -->

                                    <div class="radio">
                                        <input type="radio" id="CashOnDelivery" value="cash on delivery"
                                            name="paymentMethod">
                                        <label style="margin-top: 20px">Cash On Delivery</label>

                                    </div>
                                    <!-- <p>Please send a check to Store Name, Store Street, Store Town, Store State /
                                        County,
                                        Store Postcode.</p> -->
                                </div>

                                <div class="creat_account mt-3">
                                    <input type="checkbox" id="f-option4" name="selector">
                                    <label for="f-option4">Iâ€™ve read and accept the </label>
                                    <a href="#">terms & conditions*</a>
                                </div>

                                <button class="primary-btn mt-3">Proceed to Paypal</button>
                                <!-- <input type="number" id="amount"> -->

                                <div id="paypal-button-container"></div>
                            </div>
                        </div>

                    </div>
                </form>
            </div>
        </div>
    </section>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://www.paypal.com/sdk/js?client-id=<%= paypalClindId %>" data-namespace="paypal_sdk"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"
        integrity="sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg=="
        crossorigin="anonymous"></script>
    <script>
        let coupenCode;
        async function applayCoupen(subtotal) {
            let total = subtotal
            coupenCode = document.getElementById("coupenInput").value;
            console.log(coupenCode + "code");
            if (coupenCode == "") {
                document.getElementById("coupenErr").style.color = "red";
                document.getElementById("coupenErr").innerHTML = "Enter coupen code"
            } else {
                $.ajax({
                    url: "/verifyCoupen",
                    method: "post",
                    data: {
                        coupenCode,
                        total
                    },
                    success: (response) => {
                        console.log("aprove")
                        console.log(response);
                        if (response.statuse == true) {
                            console.log("aprove")
                            document.getElementById('coupenErr').style.color = 'green';
                            document.getElementById('coupenErr').innerHTML = 'coupen added'

                            document.getElementById('discountAmount').innerHTML = response.cutOff
                            document.getElementById('totalAmount').innerHTML = '$' + response.calculateTotal
                            document.getElementById('totalAmount').value = '$' + response.calculateTotal
                            document.getElementById('AppleyButton').style.display = 'none'
                        } else {
                            document.getElementById('coupenErr').style.color = 'red'
                            document.getElementById('coupenErr').innerHTML = response.coupensms

                        }

                    }

                })
            }

        }

        let userOrderData;
        let coupenAmount;
        let walletBalance
        $("#checkout-form").submit((el) => {
            el.preventDefault();
            console.log("33333")
            coupenAmount = document.getElementById('discountAmount').innerHTML
            console.log(coupenAmount);

            $.ajax({
                url: `/checkOut?coupenAmount=${coupenAmount}`,
                method: "post",
                data: $("#checkout-form").serialize(), coupenAmount,
                success: (response) => {
                    console.log(response);
                    if (response.cashOnDelivery || response.Wallet) {
                        console.log("....");
                        Swal.fire({
                            title: 'Order Placed Successfully',
                            icon: "success",
                            showDenyButton: false,
                            confirmButtonText: " Order Successfully",
                            toast: true,
                        }).then((result) => {
                            console.log(result);
                            if (result.isConfirmed) {
                                location.href = "/OrderComplited"
                            }
                        })
                    } else if (response.noBalance) {
                        const Toast = Swal.mixin({
                            toast: true,
                            position: 'top-end',
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true,
                            didOpen: (toast) => {
                                toast.addEventListener('mouseenter', Swal.stopTimer)
                                toast.addEventListener('mouseleave', Swal.resumeTimer)
                            }
                        })

                        Toast.fire({
                            icon: 'error',
                            title: 'There is no balance in wallet',
                        })

                    }else if (response.outofproduct) {
                        const Toast = Swal.mixin({
                            toast: true,
                            position: 'top-end',
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true,
                            didOpen: (toast) => {
                                toast.addEventListener('mouseenter', Swal.stopTimer)
                                toast.addEventListener('mouseleave', Swal.resumeTimer)
                            }
                        })

                        Toast.fire({
                            icon: 'error',
                            title: response.outofstock +" is out of stock",
                        })

                    }
                    else if (response.noAddress) {
                        const Toast = Swal.mixin({
                            toast: true,
                            position: 'top-end',
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true,
                            didOpen: (toast) => {
                                toast.addEventListener('mouseenter', Swal.stopTimer)
                                toast.addEventListener('mouseleave', Swal.resumeTimer)
                            }
                        })

                        Toast.fire({
                            icon: 'error',
                            title: 'Chose a address',
                        })

                    }
                    else if (response.Razorpay) {
                        userOrderData = response.userOrderData
                        walletBalance = response.walletamount
                        console.log(".......");
                        console.log(response.walletBalance);
                        amount = response.walletBalance
                        
                        paypal_sdk.Buttons({
                            createOrder: function () {
                                return fetch("/create-order", {
                                    method: "POST",
                                    headers: {
                                        "Content-Type": "application/json",
                                    },
                                    body: JSON.stringify({
                                        items: [
                                            {
                                                id: 1,
                                                amount: response.walletBalance,
                                            },
                                            { id: 2, amount: response.walletBalance },
                                        ],
                                    }),
                                }).then(res => {
                                    console.log("came");
                                    if (res.ok) return res.json()
                                    console.log(res.json());
                                    return res.json().then(json => Promise.reject(json))
                                }).then(({ id }) => {
                                    console.log("pp");
                                    return id
                                }).catch(e => {
                                    console.log("//// ");
                                    console.error(e)
                                })
                            },
                            onApprove: function (data, actions) {
                                console.log(data);
                                console.log(actions);
                                return actions.order.capture().then(function (details) {
                                    verifyPayment(response) 
                                    alert("transaction complited")
                                })
                            }
                        }).render('#paypal-button-container');
                    }
                }
            })
        })
        // `/deliteProfile?addressId=${addressId}`


        function verifyPayment(verifyData) {
            console.log("paypal")
            console.log(walletBalance);
            $.ajax({
                url: "/verifyPayment",
                data: {
                    verifyData,
                    userOrderData,
                    coupenCode,
                    amount,
                    walletBalance

                },
                method: "post",
                success: (response) => {
                    console.log(response);
                    if (response.status) {
                        Swal.fire({
                            title: 'Order Placed Successfully',
                            icon: "success",
                            showDenyButton: false,
                            confirmButtonText: " Order Successfully",
                            toast: true,
                        }).then((result) => {
                            console.log(result);
                            if (result.isConfirmed) {
                                location.href = "/OrderComplited"
                            }
                        })
                    }
                }
            })

        }

    </script>
    <script>


//  paypal_sdk.Buttons({

// creatrOrder: function(data,actions){
//     return actions.order.create({
//         purchase_units:[npm i @paypal/checkout-server-sdk
//             {
//                 amount:{
//                     value:amountElement.value,
//                 },
//             },
//         ],
//     })
// },
// onApprove: function(data, actions){
//     return actions.order.capture().then(function(details){
//         alert("transaction Complite by ")
//     })
// }
// }).render("#paypal")

    </script>

    <%- include('userpartials/userfooter.ejs') %>